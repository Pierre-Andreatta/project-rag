"""db_rework_source_content

Revision ID: 79854ef7a2b6
Revises: 
Create Date: 2025-06-12 23:52:33.620291

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from rag_project.db.models.content import Vector

# revision identifiers, used by Alembic.
revision: str = '79854ef7a2b6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('is_system', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('reject_reasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Enum('INAPPROPRIATE', 'DUPLICATE', 'LOW_QUALITY', 'OUTDATED', name='rejectreasonenum'), nullable=False),
    sa.Column('severity', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reason')
    )
    op.create_table('sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path_to_content', sa.String(length=500), nullable=False),
    sa.Column('source_type', sa.Enum('DEFAULT', 'WEB', 'PDF', 'YOUTUBE', name='sourcetypeenum'), nullable=False),
    sa.Column('is_accepted', sa.Boolean(), nullable=False),
    sa.Column('rejection_reason', sa.Enum('INAPPROPRIATE', 'DUPLICATE', 'LOW_QUALITY', 'OUTDATED', name='rejectreasonenum'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['rejection_reason'], ['reject_reasons.reason'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('path_to_content')
    )
    op.create_index('idx_rejection_reason', 'sources', ['rejection_reason'], unique=False)
    op.create_index('idx_source_created_at', 'sources', [sa.literal_column('created_at DESC')], unique=False)
    op.create_index('idx_source_path', 'sources', ['path_to_content'], unique=False)
    op.create_index('idx_source_status', 'sources', ['is_accepted'], unique=False)
    op.create_table('contents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('embedding', Vector(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_embedding_cosine', 'contents', ['embedding'], unique=False, postgresql_using='ivfflat', postgresql_with={'lists': 10}, postgresql_ops={'embedding': 'vector_cosine_ops'})
    op.create_table('source_categories',
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('source_id', 'category_id')
    )
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_table('documents')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('embedding', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('documents_pkey'))
    )
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.drop_table('source_categories')
    op.drop_index('ix_embedding_cosine', table_name='contents', postgresql_using='ivfflat', postgresql_with={'lists': 10}, postgresql_ops={'embedding': 'vector_cosine_ops'})
    op.drop_table('contents')
    op.drop_index('idx_source_status', table_name='sources')
    op.drop_index('idx_source_path', table_name='sources')
    op.drop_index('idx_source_created_at', table_name='sources')
    op.drop_index('idx_rejection_reason', table_name='sources')
    op.drop_table('sources')
    op.drop_table('reject_reasons')
    op.drop_table('categories')
    # ### end Alembic commands ###
